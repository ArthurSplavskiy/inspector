{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/git_project/inspector/client/src/pages/CreatePage.js\";\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport { useHttp } from '../hooks/http.hook';\nimport { AuthContext } from '../context/AuthContext';\nimport { useHistory } from 'react-router-dom';\nexport const CreatePage = () => {\n  const history = useHistory();\n  const auth = useContext(AuthContext);\n  const {\n    request\n  } = useHttp();\n  const [payer, setPayer] = useState([]);\n  const ref = useRef(null);\n  useEffect(() => {\n    window.M.updateTextFields();\n  }, []);\n  addPa;\n\n  const pressHandler = async event => {\n    if (event.key === 'Enter') {\n      const newpayer = {\n        payerCode: ref.current.value\n      };\n      alert(newpayer);\n\n      try {\n        const data = await request('/api/payer/createpayer', 'POST', {\n          payerCode: payer.payerCode\n        }, {\n          Authorization: `Bearer ${auth.token}`\n        });\n        history.push(`/detail/${data.payer._id}`);\n      } catch (e) {}\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s8 offset-s2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"create-peyer-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438 \\u043F\\u043B\\u0430\\u0442\\u043D\\u0438\\u043A\\u0430\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col s8 offset-s2\",\n    style: {\n      paddingTop: '2rem'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-con\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: ref,\n    className: \"create-input\",\n    id: \"payer-code\",\n    type: \"text\",\n    value: payer.payerCode,\n    onChange: e => setPayer(e.target.value),\n    onKeyPress: pressHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"create-label\",\n    htmlFor: \"payer-code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"\\u041A\\u043E\\u0434 \\u043F\\u043B\\u0430\\u0442\\u043D\\u0438\\u043A\\u0430\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-con\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"create-btn red accent-2\",\n    onClick: pressHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"\\u0421\\u0442\\u0432\\u043E\\u0440\\u0438\\u0442\\u0438\"))));\n};","map":{"version":3,"sources":["/Users/macbookpro/Desktop/git_project/inspector/client/src/pages/CreatePage.js"],"names":["React","useState","useEffect","useContext","useRef","useHttp","AuthContext","useHistory","CreatePage","history","auth","request","payer","setPayer","ref","window","M","updateTextFields","addPa","pressHandler","event","key","newpayer","payerCode","current","value","alert","data","Authorization","token","push","_id","e","paddingTop","target"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, useRef} from 'react'\nimport {useHttp} from '../hooks/http.hook'\nimport { AuthContext } from '../context/AuthContext'\nimport {useHistory} from 'react-router-dom'\n\nexport const CreatePage = () => {\n    const history = useHistory()\n    const auth = useContext(AuthContext)\n    const {request} = useHttp()\n    const [payer, setPayer] = useState([])\n    const ref = useRef(null)\n\n    useEffect(() => {\n        window.M.updateTextFields()\n    }, [])\n\n    addPa\n\n    const pressHandler = async event => {\n        if(event.key === 'Enter') {\n            const newpayer = {\n                payerCode: ref.current.value\n            }\n            alert(newpayer)\n            try {\n                const data = await request('/api/payer/createpayer', 'POST', {payerCode: payer.payerCode}, {\n                    Authorization: `Bearer ${auth.token}`\n                })\n                history.push(`/detail/${data.payer._id}`)\n            } catch(e) {}\n        }\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col s8 offset-s2\">\n                <h1 className=\"create-peyer-title\">Створити платника</h1>\n            </div>\n            <div className=\"col s8 offset-s2\" style={{ paddingTop: '2rem' }}>\n\n                <div className=\"input-con\">\n                    <input\n                        ref={ref}\n                        className=\"create-input\"\n                        id=\"payer-code\"\n                        type=\"text\"\n                        value={payer.payerCode}\n                        onChange={e => setPayer(e.target.value)}\n                        onKeyPress={pressHandler}\n                    />\n                    <label className=\"create-label\" htmlFor=\"payer-code\">Код платника</label>\n                </div>\n                \n                {/* <div className=\"input-con\">\n                    <input\n                        className=\"create-input\"\n                        id=\"payer-name\"\n                        type=\"text\"\n                        value={payer}\n                        onChange={e => setPayer(e.target.value)}\n                    />\n                    <label className=\"create-label\" htmlFor=\"payer-name\">ПІП Платника</label>\n                </div>\n\n                <div className=\"input-con\">\n                    <input\n                        className=\"create-input\"\n                        id=\"payer-type\"\n                        type=\"text\"\n                        value={payer}\n                        onChange={e => setPayer(e.target.value)}\n                        onKeyPress={pressHandler}\n                    />\n                    <label className=\"create-label\" htmlFor=\"payer-type\">Вид організації</label>\n                </div>\n\n                <div className=\"input-con\">\n                    <input\n                        className=\"create-input\"\n                        id=\"payer-tax\"\n                        type=\"text\"\n                        value={payer}\n                        onChange={e => setPayer(e.target.value)}\n                    />\n                    <label className=\"create-label\" htmlFor=\"payer-tax\">Вид податку</label>\n                </div>\n\n                <div className=\"input-con\">\n                    <input\n                        className=\"create-input\"\n                        id=\"payer-income\"\n                        type=\"text\"\n                        value={payer}\n                        onChange={e => setPayer(e.target.value)}\n                    />\n                    <label className=\"create-label\" htmlFor=\"payer-income\">Річний дохід</label>\n                </div>\n\n                <div className=\"input-con\">\n                    <input\n                        className=\"create-input\"\n                        id=\"payer-period\"\n                        type=\"date\"\n                        value={payer}\n                        onChange={e => setPayer(e.target.value)}\n                    />\n                    <label className=\"create-label\" htmlFor=\"payer-period\">Кінець податкового періоду</label>\n                </div>\n\n                <div className=\"input-con\">\n                    <input\n                        className=\"create-input\"\n                        id=\"payer-phone\"\n                        type=\"text\"\n                        value={payer}\n                        onChange={e => setPayer(e.target.value)}\n                    />\n                    <label className=\"create-label\" htmlFor=\"payer-phone\">Телефон</label>\n                </div>\n\n                <div className=\"input-con\">\n                    <input\n                        className=\"create-input\"\n                        id=\"payer-email\"\n                        type=\"text\"\n                        value={payer}\n                        onChange={e => setPayer(e.target.value)}\n                    />\n                    <label className=\"create-label\" htmlFor=\"payer-email\">Email</label>\n                </div> */}\n\n                <div className=\"btn-con\">\n                    <button\n                        className=\"create-btn red accent-2\"\n                        onClick={pressHandler}\n                    >Створити</button>\n                </div>\n            </div>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}